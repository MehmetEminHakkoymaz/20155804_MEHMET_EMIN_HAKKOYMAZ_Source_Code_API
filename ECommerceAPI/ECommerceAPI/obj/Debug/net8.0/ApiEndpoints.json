[
  {
    "ContainingType": "ECommerceAPI.Controllers.AdvancedXmlController",
    "Method": "GetAdvancedXml",
    "RelativePath": "api/AdvancedXml/advanced/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "ECommerceAPI.Controllers.AdvancedXmlController",
    "Method": "CompareXmlFormats",
    "RelativePath": "api/AdvancedXml/compare-formats/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "ECommerceAPI.Controllers.AdvancedXmlController",
    "Method": "GetCustomSerialized",
    "RelativePath": "api/AdvancedXml/custom-serialize",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "ECommerceAPI.Controllers.AdvancedXmlController",
    "Method": "GetExternalProducts",
    "RelativePath": "api/AdvancedXml/external",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "ECommerceAPI.Controllers.AdvancedXmlController",
    "Method": "CompareXmlParsingMethods",
    "RelativePath": "api/AdvancedXml/parsing/compare",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "ECommerceAPI.Controllers.ApiDocsController",
    "Method": "GetApiDocs",
    "RelativePath": "api/ApiDocs",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "ECommerceAPI.Controllers.ApiDocsController",
    "Method": "GetPostmanCollection",
    "RelativePath": "api/ApiDocs/postman",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "ECommerceAPI.Controllers.ApiTestController",
    "Method": "RunAllTests",
    "RelativePath": "api/ApiTest",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "ECommerceAPI.Controllers.ApiTestController",
    "Method": "GetTestDocumentation",
    "RelativePath": "api/ApiTest/documentation",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "ECommerceAPI.Controllers.ApiTestController",
    "Method": "RunProductApiTests",
    "RelativePath": "api/ApiTest/products",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "ECommerceAPI.Controllers.ApiTestController",
    "Method": "RunXmlParsingTests",
    "RelativePath": "api/ApiTest/xml-parsing",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "ECommerceAPI.Controllers.ApiTestController",
    "Method": "RunXmlSecurityTests",
    "RelativePath": "api/ApiTest/xml-security",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "ECommerceAPI.Controllers.AuthController",
    "Method": "Login",
    "RelativePath": "api/Auth/login",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "model",
        "Type": "ECommerceAPI.Controllers.LoginModel",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "ECommerceAPI.Controllers.AuthController",
    "Method": "Register",
    "RelativePath": "api/Auth/register",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "model",
        "Type": "ECommerceAPI.Controllers.RegisterModel",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "ECommerceAPI.Controllers.ProductsController",
    "Method": "GetProducts",
    "RelativePath": "api/Products",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "ECommerceAPI.Controllers.ProductsController",
    "Method": "AddProduct",
    "RelativePath": "api/Products",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "product",
        "Type": "ECommerceAPI.Models.Product",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "ECommerceAPI.Controllers.ProductsController",
    "Method": "GetProduct",
    "RelativePath": "api/Products/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "ECommerceAPI.Controllers.ProductsController",
    "Method": "UpdateProduct",
    "RelativePath": "api/Products/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "product",
        "Type": "ECommerceAPI.Models.Product",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "ECommerceAPI.Controllers.ProductsController",
    "Method": "DeleteProduct",
    "RelativePath": "api/Products/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "ECommerceAPI.Controllers.ProductsController",
    "Method": "GetProductsAsHtml",
    "RelativePath": "api/Products/html",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "ECommerceAPI.Controllers.SoapInfoController",
    "Method": "GetSoapExplanation",
    "RelativePath": "api/SoapInfo/explanation",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "ECommerceAPI.Controllers.SoapInfoController",
    "Method": "GetSoapTestingGuide",
    "RelativePath": "api/SoapInfo/testing-guide",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "ECommerceAPI.Controllers.SoapInfoController",
    "Method": "GetWsdlInfo",
    "RelativePath": "api/SoapInfo/wsdl-info",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "ECommerceAPI.Controllers.XmlSecurityController",
    "Method": "EncryptProductElement",
    "RelativePath": "api/XmlSecurity/encrypt/{id}/{elementName}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "elementName",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "ECommerceAPI.Controllers.XmlSecurityController",
    "Method": "GenerateSignatureReport",
    "RelativePath": "api/XmlSecurity/report",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "xmlContent",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "ECommerceAPI.Controllers.XmlSecurityController",
    "Method": "SecureProduct",
    "RelativePath": "api/XmlSecurity/secure/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "ECommerceAPI.Controllers.XmlSecurityController",
    "Method": "SignProductXml",
    "RelativePath": "api/XmlSecurity/sign/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "ECommerceAPI.Controllers.XmlSecurityController",
    "Method": "VerifySignedXml",
    "RelativePath": "api/XmlSecurity/verify",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "xmlContent",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "ECommerceAPI.Controllers.WeatherForecastController",
    "Method": "Get",
    "RelativePath": "WeatherForecast",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[ECommerceAPI.WeatherForecast, ECommerceAPI, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "StatusCode": 200
      }
    ],
    "EndpointName": "GetWeatherForecast"
  }
]